name: CI/CD

on:
  push:
  pull_request:

jobs:
  ci_build:
    name: CI Build
    runs-on: ubuntu-latest
    container: joshkeegan/dotnet-mixed-build:8.0
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Lint
        working-directory: build
        run: make lint

      - name: Build
        working-directory: build
        run: make build
      
      - name: Run Unit Tests (Main xRetry)
        working-directory: build
        run: make unit-tests-run-main
      
      - name: Run Unit Tests (Single Threaded xRetry)
        working-directory: build
        run: make unit-tests-run-single-threaded
      
      - name: Run Unit Tests (SpecFlow)
        working-directory: build
        run: make unit-tests-run-specflow
      
      - name: Run Unit Tests (Reqnroll)
        working-directory: build
        run: make unit-tests-run-reqnroll

      - name: Run Unit Tests (Main xRetry.v3)
        working-directory: build
        run: make unit-tests-run-main-v3

      - name: Run Unit Tests (Single Threaded xRetry.v3)
        working-directory: build
        run: make unit-tests-run-single-threaded-v3

      - name: Create Nuget Packages
        working-directory: build
        run: make nuget-create
      
      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        with:
          name: artefacts
          path: artefacts
        if: ${{ always() }}
      
      - name: Upload deployment scripts
        uses: actions/upload-artifact@v4
        with:
          name: deploy
          path: deploy
  
  ci_docs:
    name: CI Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Generate docs
        working-directory: docs
        run: make all

      - name: Check no modified files (docs must be generated locally & checked in)
        run: |
          git update-index --refresh
          git diff-index --quiet HEAD --
  
  cd:
    name: CD
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:9.0
    needs: 
      - ci_build
      - ci_docs
    if: github.ref_type == 'tag'
    steps:
      - name: Download deployment scripts
        uses: actions/download-artifact@v5
        with:
          name: deploy
          path: deploy
      
      - name: Download artefacts
        uses: actions/download-artifact@v5
        with:
          name: artefacts
          path: artefacts

      - name: "Release: xRetry"
        if: startsWith(github.ref, 'refs/tags/xRetry_v')
        working-directory: deploy
        run: /bin/bash deploy.sh xRetry ${{ secrets.NUGET_API_KEY }}

      - name: "Release: xRetry.SpecFlow"
        if: startsWith(github.ref, 'refs/tags/xRetry.SpecFlow_v')
        working-directory: deploy
        run: /bin/bash deploy.sh xRetry.SpecFlow ${{ secrets.NUGET_API_KEY }}

      - name: "Release: xRetry.Reqnroll"
        if: startsWith(github.ref, 'refs/tags/xRetry.Reqnroll_v')
        working-directory: deploy
        run: /bin/bash deploy.sh xRetry.Reqnroll ${{ secrets.NUGET_API_KEY }}

      - name: "Release: xRetry.v3"
        if: startsWith(github.ref, 'refs/tags/xRetry.v3_v')
        working-directory: deploy
        run: /bin/bash deploy.sh xRetry.v3 ${{ secrets.NUGET_API_KEY }}